{
  "name": "challenge-api2",
  "version": "1.0.0",
  "description": "1. **Create a new reference**     - Create an API endpoint that accepts an URL input (HTML page) and returns `id`, `url`, and `timestamp` as JSON.     - Upon successful reference creation, an asynchronous background task should be triggered to fetch data from the input URL.     - **Note:** This step should return the newly-created reference immediately without waiting for the data to be fetched. 2. **Process the newly-created reference**     - Your asynchronous background worker will extract the page's `title` and `meta name=\"description\"` and store the result somewhere.     - You may either associate the result with the reference or update the reference itself. 3. **Make the data available**     - Create a new API endpoint or overload the same endpoint from step 1 to accept either the reference `id` or the `url` and return the result as JSON.     - If the data is still being fetched/processed, return an appropriate REST response instead.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/b-hexsoul/challenge-api2.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/b-hexsoul/challenge-api2/issues"
  },
  "homepage": "https://github.com/b-hexsoul/challenge-api2#readme",
  "dependencies": {
    "axios": "^0.21.1",
    "cheerio": "^1.0.0-rc.5",
    "express": "^4.17.1",
    "helmet": "^4.4.1",
    "mongoose": "^5.12.2"
  },
  "devDependencies": {
    "morgan": "^1.10.0",
    "nodemon": "^2.0.7"
  }
}
